# RoboCup Humanoid League Field Configuration
# Based on RC-HL-2025-Rules.pdf specifications
# Updated to be consistent with all code requirements

# Field Type: Choose between 'kidsize' or 'adultsize' or 'custom'
field_type: "kidsize"

# Real-world field dimensions (in meters) - from RoboCup rules
real_world_dimensions:
  kidsize:
    field_length: 9.0          # Touch line length (A)
    field_width: 6.0           # Goal line length (B)
    goal_depth: 0.6            # Goal depth (C)
    goal_width: 2.6            # Goal width (D)
    goal_height: 1.2           # Goal height
    goal_area_length: 1.0      # Goal area length (E)
    goal_area_width: 3.0       # Goal area width (F)
    penalty_mark_distance: 1.5 # Penalty mark distance from goal (G)
    centre_circle_diameter: 1.5 # Centre circle diameter (H)
    border_strip_width: 1.0    # Minimum border strip width (I)
    penalty_area_length: 2.0   # Penalty area length (J)
    penalty_area_width: 5.0    # Penalty area width (K)
    line_width: 0.05           # Field line width (~5cm)

# Simulation display dimensions (in pixels)
# The simulation will scale real-world dimensions to these pixel dimensions
display_dimensions:
  width: 900                   # Pixels for field width (Used to be 600)
  height: 600                  # Pixels for field height (Used to be 400)
  scale_factor: 100            # Pixels per meter (auto-calculated)

# Robot and ball parameters (in meters - real world scale)
robot_parameters:
  robot_radius: 0.15           # Robot collision radius (15cm)
  ball_radius: 0.08            # Ball radius (8cm - FIFA standard)

  possession_threshold: 0.25   # Distance to consider "close to ball" (25cm) 
  contact_threshold: 0.25      # Can push ball
  close_distance: 0.4         # Distance between the robot and the ball to be considered 'close'
  medium_distance: 0.8        # Distance between the robot and the ball to be considered 'medium distance'
  far_distance: 1.5           # Distance between the robot and the ball to be considered 'far'

  good_shepherding_angle: 45         # Degrees
  okay_shepherding_angle: 90         # Degrees
  ball_speed_minimum: 0.1            # For rewards
  robot_speed_minimum: 0.1           # For movement rewards
  prediction_steps: 5                # Steps ahead for ball prediction
  base_robot_speed_mps: 2.5          # Robot speed in m/s
  base_rotation_speed_rps: 4.0       # Robot rotation in radians/sec
  base_opponent_speed_mps: 2.5       # Opponent speed in m/s

# Physics parameters
physics:
  ball_mass: 0.5               # Ball mass for physics calculations
  ball_friction: 0.8           # Ball friction (0-1, lower = more friction)
  ball_bounce: 0.2             # Wall bounce dampening
  ball_max_speed: 3.0          # Maximum ball speed (m/s)
  push_force_multiplier: 1.2   # How strong robot pushes ball

# Game difficulty settings
difficulty_settings:
  easy:
    possession_distance: 0.5   # Easier to get ball (50cm)
    collision_distance: 0.2    # More forgiving collisions (20cm)
    max_steps: 500             # Shorter episodes (Used to be 150)
    opponent_speed_multiplier: 0.8        # Slower opponent
    
  medium:
    possession_distance: 0.4   # Medium ball possession range (40cm)
    collision_distance: 0.25   # Medium collision distance (25cm)
    max_steps: 800             # Medium episode length (Used to be 200)
    opponent_speed_multiplier: 1.0        # Normal opponent speed
    
  hard:
    possession_distance: 0.35  # Harder to get ball (35cm)
    collision_distance: 0.3    # Less forgiving collisions (30cm)
    max_steps: 1000             # Longer episodes (Used to be 250)
    opponent_speed_multiplier: 1.2        # Faster opponent

# CONFIG FOR THE BEST MODEL BTW
# # Strategic zones (as percentages of field dimensions)
# # These define key areas for reward calculation and AI decision making
# strategic_zones:
#   # Optimal shooting zone (directly in front of goal)
#   optimal_shooting:
#     x_min_percent: 0.725       # 72.5% of field length (close to goal)
#     x_max_percent: 0.85        # 85% of field length 
#     y_min_percent: 0.35       # Used to be 42.5% of field width (centered on goal)
#     y_max_percent: 0.65       # Used to be 57.5% of field width
    
#   # Dangerous attacking zone (wider area near goal)
#   attacking_zone:
#     x_min_percent: 0.6         # 60% of field length
#     x_max_percent: 1.0         # Full field length
#     y_min_percent: 0.25        # 25% of field width
#     y_max_percent: 0.75        # 75% of field width
    
#   # Defensive zone (own half)
#   defensive_zone:
#     x_min_percent: 0.0         # Start of field
#     x_max_percent: 0.5         # Half field
#     y_min_percent: 0.0         # Full width
#     y_max_percent: 1.0
    
#   # Midfield zone
#   midfield_zone:
#     x_min_percent: 0.3         # 30% of field length
#     x_max_percent: 0.7         # 70% of field length
#     y_min_percent: 0.0         # Full width
#     y_max_percent: 1.0
  
#   # Field thirds for strategic positioning
#   field_thirds: 3                     # Number of field divisions for strategic zones
#   attacking_third_start: 0.67         # Fraction of field width where attacking third starts
#   middle_third_start: 0.33            # Fraction of field width where middle third starts
    
  # Goal area coordinates (calculated from real dimensions)
  goal_area:
    # These will be calculated automatically based on goal dimensions
    use_real_dimensions: true
    
  # Penalty area coordinates (calculated from real dimensions)
  penalty_area:
    # These will be calculated automatically based on penalty area dimensions
    use_real_dimensions: true

# CONFIG FOR THE BEST MODEL BTW
# reward_parameters:
#   # === TERMINAL OUTCOMES ===
#   goal_scored_reward: 150.0          # Massive reward for scoring in target goal
#   opponent_goal_penalty: -60.0      # Massive penalty for opponent scoring
#   ball_out_bounds_penalty: -20.0     # Large penalty for losing ball out of bounds
#   robot_collision_penalty: -8.0     # Large penalty for colliding with opponent

#   # === PHASE 1: BALL ACQUISITION ===
#   ball_contact_reward: 3.0           # Strong reward for touching ball (within contact_threshold)
#   ball_close_reward: 2.0              # Reward for being close to ball  
#   ball_medium_reward: 1.0             # Reward for being medium distance from ball
#   ball_far_reward: 0.3                # Small reward for being far but approaching ball
#   # Distance threshold multipliers (multiply by contact_threshold)
#   close_threshold_multiplier: 2.0     # 2x contact_threshold for "close"
#   medium_threshold_multiplier: 4.0    # 4x contact_threshold for "medium"  
#   far_threshold_multiplier: 6.0       # 6x contact_threshold for "far"
#   # Ball seeking penalties and rewards
#   far_ball_threshold: 0.4             # Fraction of max field distance for "too far" 
#   far_ball_penalty: 0.5               # Penalty for being too far from ball
#   movement_threshold: 0.1             # Minimum speed to get movement rewards

#   ball_possession_max_reward: 25.0    # Maximum reward for ball possession (smooth transition)
#   ball_distance_penalty_rate: 2.0    # Rate of penalty increase with distance from ball
#   opponent_closer_penalty_rate: 0.01   # Penalty rate when opponent is closer to ball
#   opponent_closer_max_penalty: 2.0   # Maximum penalty for opponent being closer

#   # === PHASE 2: BALL CONTROL & DRIBBLING ===
#   ball_possession_reward: 3.0         # Base reward per step for having ball
#   goal_progress_reward_rate: 20.0     # Reward rate for moving ball closer to goal
#   goal_regression_penalty_rate: 5.0  # Penalty rate for moving ball away from goal
#   goal_regression_threshold: 1.0     # Minimum backward movement to trigger penalty
  
#   shepherding_max_bonus: 3.0         # Maximum bonus for correct shepherding position
#   # Shepherding (robot positioning behind ball)
#   shepherding_alignment_threshold: 0.5  # Minimum alignment for shepherding bonus
#   shepherding_angle_threshold: 45.0   # Degrees - robot behind ball relative to goal
#   # Strategic positioning zones
#   optimal_zone_x_threshold: 0.7        # X-fraction for optimal shooting zone
#   optimal_zone_y_threshold: 0.3        # Y-center threshold for optimal zone
#   optimal_zone_reward: 5.0             # Reward for optimal shooting position
#   attacking_zone_x_threshold: 0.6      # X-fraction for attacking zone
#   attacking_zone_reward: 2.0           # Reward for attacking zone

#   ball_direction_reward_rate: 5.0    # Reward rate for ball moving toward goal
#   ball_direction_threshold: 0.5       # Minimum alignment to trigger reward
#   optimal_ball_speed_mps: 1.0         # Optimal dribbling speed in meters/second

#   # === PHASE 3: POSITIONAL STRATEGY ===
#   robot_progress_reward_rate: 5.0    # Reward rate for robot advancing toward goal
#   attacking_third_bonus: 2.5          # Bonus for being in attacking third with ball
#   middle_third_bonus: 1.0             # Bonus for being in middle third with ball

#   # === BEHAVIORAL PENALTIES ===
#   boundary_penalty_threshold: 0.1     # Fraction of field size for boundary penalty zone
#   boundary_penalty_max: 0.5          # Maximum penalty for robot near boundaries
#   ball_boundary_penalty_max: 2.0     # Maximum penalty for ball near boundaries
#   boundary_movement_tolerance: 0.2    # Minimum speed to avoid boundary penalties
#   boundary_goal_progress_threshold: 0.3  # Minimum goal-ward alignment to reduce boundary penalty
#   reduced_boundary_penalty: 0.1       # Reduced penalty when moving toward goal on boundary
#   stationary_boundary_penalty: 1.0    # Extra penalty for being stationary on boundary
  
#   time_step_penalty: 0.02              # Small penalty per time step (efficiency)
#   stationary_penalty: 3.0             # Penalty for robot not moving
#   stationary_speed_threshold: 0.2     # Minimum speed to avoid stationary penalty
  
#   opponent_possession_penalty: 1.5    # Per-step penalty while opponent has ball
#   robot_possession_bonus_rate: 0.1    # Bonus rate for maintaining possession
#   robot_possession_bonus_cap: 2.0     # Maximum possession bonus
#   robot_possession_min_time: 5        # Minimum possession time before bonus

#   # === OTHERS ===
#   min_required_linear_speed: 0.5  # THis is more a threshold for mon speed required to not get a penalty
#   max_rotation_without_translation: 0.1 # Threshold for max rotation while not moving
#   spinning_penalty: 8.0        # Penalty for spinning like a beyblade
#   ball_seeking_threshold: 0.3       # Reward for seeking the ball
#   ball_seeking_reward_rate: 1.0    # Reward multiplier for seeking the ball
#   wrong_direction_penalty_rate: 0.5  
#   reward_min_bound: -50.0
#   reward_max_bound: 100.0
#   invalid_state_penalty: -1.0
########################################################################
# Complete reward_parameters section for field_config.yaml
# Replace your existing reward_parameters section with this updated version

reward_parameters:
  # === TERMINAL OUTCOMES ===
  goal_scored_reward: 150.0          # Increased from 100.0 - MASSIVE reward for scoring
  opponent_goal_penalty: -60.0      # Penalty for opponent scoring
  ball_out_bounds_penalty: -20.0     # Large penalty for losing ball out of bounds
  
  # === COLLISION MANAGEMENT (UPDATED) ===
  robot_collision_penalty: -8.0      # Reduced from -15.0 - less fear of opponent
  collision_near_goal_bonus: 5.0     # NEW: Bonus for brave contact near opponent goal
  collision_distance_threshold: 0.3  # Distance at which collision is detected
  
  # === AGGRESSIVE DRIBBLING REWARDS (NEW) ===
  aggressive_dribbling_bonus: 15.0   # NEW: Bonus for moving toward goal when opponent is close
  opponent_proximity_threshold: 1.0  # Distance (meters) to trigger aggressive dribbling
  goal_zone_aggression_multiplier: 2.0  # Double aggression bonus in attacking third
  opponent_near_goal_courage: 10.0   # NEW: Bonus for staying near goal despite opponent
  opponent_fear_distance: 0.8        # Distance (meters) at which to give courage bonus

  # === PHASE 1: BALL ACQUISITION ===
  ball_contact_reward: 3.0           # Increased from 15.0 - stronger reward for ball contact
  ball_close_reward: 2.0              # Reward for being close to ball 
  ball_medium_reward: 1.0             # Reward for being medium distance from ball
  ball_far_reward: 0.3                # Small reward for being far but approaching ball
  close_threshold_multiplier: 2.0     # 2x contact_threshold for "close"
  medium_threshold_multiplier: 4.0    # 4x contact_threshold for "medium"  
  far_threshold_multiplier: 6.0       # 6x contact_threshold for "far"
  # Ball seeking penalties and rewards
  far_ball_threshold: 0.4             # Fraction of max field distance for "too far" 
  far_ball_penalty: 0.5               # Penalty for being too far from ball
  movement_threshold: 0.1             # Minimum speed to get movement rewards

  ball_possession_max_reward: 25.0    # Maximum reward for ball possession
  ball_distance_penalty_rate: 1.5    # Reduced from 2.0 - less harsh distance penalty
  opponent_closer_penalty_rate: 0.01   # Reduced from 0.3 - less penalty when opponent closer
  opponent_closer_max_penalty: 2.0   # Reduced from 5.0 - less max penalty

  # === PHASE 2: BALL CONTROL & DRIBBLING ===
  ball_possession_reward: 3.0         # Base reward per step for having ball
  goal_progress_reward_rate: 20.0     # Increased from 10.0 - more reward for ball progress
  goal_regression_penalty_rate: 3.0  # Reduced from 5.0 - less harsh regression penalty
  goal_regression_threshold: -1.0     # Minimum backward movement to trigger penalty
  
  shepherding_max_bonus: 3.0         # Increased from 6.0 - better shepherding reward
  shepherding_angle_threshold: 60.0   # Increased from 45.0 - more lenient angle
  
  ball_direction_reward_rate: 8.0    # Increased from 5.0 - more reward for good ball direction
  ball_direction_threshold: 0.3       # Reduced from 0.5 - more lenient threshold
  optimal_ball_speed_mps: 1.0         # Slightly faster optimal dribbling speed

  # === PHASE 3: POSITIONAL STRATEGY ===
  robot_progress_reward_rate: 8.0    # Increased from 5.0 - more reward for robot advancement
  attacking_third_bonus: 5.0          # Increased from 2.5 - doubled attacking bonus
  middle_third_bonus: 2.0             # Increased from 1.0 - doubled middle bonus

  # === BEHAVIORAL PENALTIES (REDUCED TO ENCOURAGE AGGRESSION) ===
  boundary_penalty_threshold: 0.05    # Reduced from 0.1 - smaller boundary penalty zone
  boundary_penalty_max: 0.5          # Reduced from 3.0 - less harsh boundary penalty
  ball_boundary_penalty_max: 1.0     # Reduced from 2.0 - less ball boundary penalty
  
  time_step_penalty: 0.01              # Reduced from 0.02 - less time pressure
  stationary_penalty: 1.0             # Reduced from 3.0 - less harsh stationary penalty
  stationary_speed_threshold: 0.15     # Reduced from 0.2 - more lenient speed requirement
  
  opponent_possession_penalty: 1.5    # Reduced from 3.0 - less penalty for opponent possession
  robot_possession_bonus_rate: 0.5    # Increased from 0.3 - better possession bonus
  robot_possession_bonus_cap: 5.0     # Increased from 3.0 - higher possession bonus cap
  robot_possession_min_time: 3        # Reduced from 5 - faster possession bonus

  # === MOVEMENT AND ANTI-SPINNING ===
  min_required_linear_speed: 0.3      # Reduced from 0.5 - more lenient speed requirement
  max_rotation_without_translation: 0.15 # Increased from 0.1 - more lenient rotation
  spinning_penalty: 7.0               # Reduced from 8.0 - less harsh spinning penalty
  ball_seeking_threshold: 0.2         # Reduced from 0.3 - more lenient seeking threshold
  ball_seeking_reward_rate: 3.0       # Increased from 5.0 - better seeking reward
  wrong_direction_penalty_rate: 0.5   # Reduced from 3.0 - less harsh wrong direction penalty
  
  # === SAFETY AND BOUNDS ===
  reward_min_bound: -30.0             # Increased from -50.0 - less harsh minimum
  reward_max_bound: 150.0             # Increased from 100.0 - higher maximum rewards
  invalid_state_penalty: -0.5         # Reduced from -1.0 - less harsh invalid state penalty

# Updated strategic zones for more aggressive play
strategic_zones:
  # Optimal shooting zone (extended and moved closer to goal)
  optimal_shooting:
    x_min_percent: 0.7       # Moved from 0.725 - start shooting zone earlier
    x_max_percent: 0.9       # Extended from 0.85 - larger shooting zone
    y_min_percent: 0.3       # Expanded from 0.35 - wider shooting zone
    y_max_percent: 0.7       # Expanded from 0.65 - wider shooting zone
    
  # Dangerous attacking zone (extended)
  attacking_zone:
    x_min_percent: 0.55      # Extended from 0.6 - larger attacking zone
    x_max_percent: 1.0       # Full field length to goal
    y_min_percent: 0.2       # Expanded from 0.25 - wider attacking zone
    y_max_percent: 0.8       # Expanded from 0.75 - wider attacking zone
    
  # NEW: High-pressure zone where robot should be most aggressive
  high_pressure_zone:
    x_min_percent: 0.75      # Very close to goal
    x_max_percent: 1.0       # All the way to goal line
    y_min_percent: 0.25      # Centered around goal
    y_max_percent: 0.75
    
  # Defensive zone (slightly reduced)
  defensive_zone:
    x_min_percent: 0.0       # Start of field
    x_max_percent: 0.45      # Reduced from 0.5 - smaller defensive zone
    y_min_percent: 0.0       # Full width
    y_max_percent: 1.0
    
  # Midfield zone (extended)
  midfield_zone:
    x_min_percent: 0.25      # Extended from 0.3 - larger midfield
    x_max_percent: 0.75      # Extended from 0.7 - larger midfield
    y_min_percent: 0.0       # Full width
    y_max_percent: 1.0
  
  # Field thirds for strategic positioning (more aggressive)
  field_thirds: 3
  attacking_third_start: 0.67           # Moved from 0.67 - start attacking earlier
  middle_third_start: 0.33              # Kept same

# Game thresholds (steps, angles, speeds)
game_thresholds:
  opponent_possession_warning: 30
  opponent_possession_critical: 60
  shepherding_good_angle: 45
  shepherding_okay_angle: 90
  ball_speed_minimum: 0.1
  robot_speed_minimum: 0.1
  prediction_steps: 5
  edge_threshold_percent: 0.05 # 5% of field size for edge detection

#TODO: (CHECK WHETHER USED) Training parameters (probably not used by training scripts)
training_parameters:
  # PPO specific
  ppo_learning_rate: 0.001
  ppo_n_steps: 4096
  ppo_batch_size: 128
  ppo_n_epochs: 8
  ppo_gamma: 0.99
  ppo_gae_lambda: 0.95
  ppo_clip_range: 0.15
  ppo_ent_coef: 0.1
  ppo_vf_coef: 0.5
  ppo_max_grad_norm: 0.5
  
  # DDPG specific
  ddpg_learning_rate: 0.001
  ddpg_buffer_size: 200000
  ddpg_learning_starts: 5000
  ddpg_batch_size: 256
  ddpg_tau: 0.01
  ddpg_gamma: 0.99
  
  # General training
  total_timesteps: 400000
  eval_freq: 10000
  plot_freq: 2000
  save_freq: 50000

# Progressive difficulty thresholds
difficulty_progression:
  medium_threshold: 100000     # Switch to medium after 100k steps
  hard_threshold: 250000       # Switch to hard after 250k steps
  performance_threshold_medium: 5.0   # Average reward needed for medium
  performance_threshold_hard: 8.0     # Average reward needed for hard

# Rendering and visualization settings
rendering:
  window_width_offset: 200     # Extra width for UI panels
  window_height_offset: 150    # Extra height for UI panels
  fps: 60                      # Target FPS for rendering
  show_zones: false            # Show strategic zones by default
  show_velocities: false       # Show velocity vectors by default
  show_field_info: true        # Show field information panel
  show_opponent_behavior: true # Show opponent behavior indicator
  # Testing mode settings (faster gameplay for testing)
  testing_mode: true           # Enable faster speeds for testing
  testing_speed_multiplier: 3.0  # Speed up everything by this factor
  testing_fps: 30              # Lower FPS for testing (smoother on slower PCs)

# Custom field dimensions (only used if field_type is 'custom')
custom_dimensions:
  field_length: 4.0            # Custom field length in meters
  field_width: 4.0             # Custom field width in meters
  goal_depth: 0.6              # Custom goal depth in meters
  goal_width: 0.8              # Custom goal width in meters
  goal_height: 1.0             # Custom goal height in meters
  goal_area_length: 0.5        # Custom goal area length in meters
  goal_area_width: 1.5         # Custom goal area width in meters
  penalty_mark_distance: 1.0   # Custom penalty mark distance in meters
  centre_circle_diameter: 1.0  # Custom centre circle diameter in meters
  border_strip_width: 0.5      # Custom border strip width in meters
  penalty_area_length: 1.0     # Custom penalty area length in meters
  penalty_area_width: 2.5      # Custom penalty area width in meters
  line_width: 0.05             # Custom line width in meters